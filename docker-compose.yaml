version: "3.8"

services:
  database:
    image: postgres
    restart: on-failure
    expose:
      - 5432
    container_name: database
    networks:
      - warehouse-networks
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: hackerearth
      POSTGRES_PASSWORD: devops123
      PGUSER: hackerearth
      PGDATA: /data/postgres
    volumes:
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
      - ./dbfiles/:/data/postgres
    healthcheck:
      test: ["CMD", "pg_isready", "-h", "database", "-p", "5432", "-d", "warehouse", "-U", "hackerearth"]
      interval: 10s
      
  backend:
    depends_on:
      - database
    build: .
    restart: on-failure
    env_file: ./.env
    ports:
      - $SPRING_LOCAL_PORT:$SPRING_DOCKER_PORT
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url"  : "jdbc:postgresql://postgresdb:$POSTGRESDB_DOCKER_PORT/$POSTGRESDB_DATABASE",
        "spring.datasource.username" : "$POSTGRESDB_USER",
        "spring.datasource.password" : "$POSTGRESDB_ROOT_PASSWORD",
        "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.PostgreSQLDialect",
        "spring.jpa.hibernate.ddl-auto" : "create"
        }'
    volumes:
      - dbfiles:/
    stdin_open: true
    tty: true

volumes:
  dbfiles: